{"ast":null,"code":"var _jsxFileName = \"/home/parixit/desk/GitHub/feedback-system/src/App.js\";\nimport React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport { getFromStorage, setInStorage } from '../../utils/storage';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      token: '',\n      signUpError: '',\n      signInError: '',\n      signInEmail: '',\n      signInPassword: '',\n      signUpEmail: '',\n      signUpPassword: ''\n    };\n    this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(this);\n    this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(this);\n    this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n    this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n    this.onSignIn = this.onSignIn.bind(this);\n    this.onSignUp = this.onSignUp.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage('the_main_app');\n\n    if (obj && obj.token) {\n      const token = obj.token; // Verify token\n\n      fetch('/api/account/verify?token=' + token).then(res => res.json()).then(json => {\n        if (json.success) {\n          this.setState({\n            token,\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isLoading: false\n          });\n        }\n      });\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  onTextboxChangeSignInEmail(event) {\n    this.setState({\n      signInEmail: event.target.value\n    });\n  }\n\n  onTextboxChangeSignInPassword(event) {\n    this.setState({\n      signInPassword: event.target.value\n    });\n  }\n\n  onTextboxChangeSignUpEmail(event) {\n    this.setState({\n      signUpEmail: event.target.value\n    });\n  }\n\n  onTextboxChangeSignUpPassword(event) {\n    this.setState({\n      signUpPassword: event.target.value\n    });\n  }\n\n  onSignUp() {\n    // Grab state\n    const _this$state = this.state,\n          signUpEmail = _this$state.signUpEmail,\n          signUpPassword = _this$state.signUpPassword;\n    this.setState({\n      isLoading: true\n    }); // Post request to backend\n\n    fetch('/api/account/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: signUpEmail,\n        password: signUpPassword\n      })\n    }).then(res => res.json()).then(json => {\n      console.log('json', json);\n\n      if (json.success) {\n        this.setState({\n          signUpError: json.message,\n          isLoading: false,\n          signUpEmail: '',\n          signUpPassword: ''\n        });\n      } else {\n        this.setState({\n          signUpError: json.message,\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  onSignIn() {\n    // Grab state\n    const _this$state2 = this.state,\n          signInEmail = _this$state2.signInEmail,\n          signInPassword = _this$state2.signInPassword;\n    this.setState({\n      isLoading: true\n    }); // Post request to backend\n\n    fetch('/api/account/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword\n      })\n    }).then(res => res.json()).then(json => {\n      console.log('json', json);\n\n      if (json.success) {\n        setInStorage('the_main_app', {\n          token: json.token\n        });\n        this.setState({\n          signInError: json.message,\n          isLoading: false,\n          signInPassword: '',\n          signInEmail: '',\n          token: json.token\n        });\n      } else {\n        this.setState({\n          signInError: json.message,\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  logout() {\n    this.setState({\n      isLoading: true\n    });\n    const obj = getFromStorage('the_main_app');\n\n    if (obj && obj.token) {\n      const token = obj.token; // Verify token\n\n      fetch('/api/account/logout?token=' + token).then(res => res.json()).then(json => {\n        if (json.success) {\n          this.setState({\n            token: '',\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isLoading: false\n          });\n        }\n      });\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          isLoading = _this$state3.isLoading,\n          token = _this$state3.token,\n          signInError = _this$state3.signInError,\n          signInEmail = _this$state3.signInEmail,\n          signInPassword = _this$state3.signInPassword,\n          signUpEmail = _this$state3.signUpEmail,\n          signUpPassword = _this$state3.signUpPassword,\n          signUpError = _this$state3.signUpError;\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    if (!token) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, signInError ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, signInError) : null, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: signInEmail,\n        onChange: this.onTextboxChangeSignInEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: signInPassword,\n        onChange: this.onTextboxChangeSignInPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Sign In\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, signUpError ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, signUpError) : null, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: signUpEmail,\n        onChange: this.onTextboxChangeSignUpEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: signUpPassword,\n        onChange: this.onTextboxChangeSignUpPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Sign Up\")));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Account\"), React.createElement(\"button\", {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Logout\"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/parixit/desk/GitHub/feedback-system/src/App.js"],"names":["React","Component","getFromStorage","setInStorage","Home","constructor","props","state","isLoading","token","signUpError","signInError","signInEmail","signInPassword","signUpEmail","signUpPassword","onTextboxChangeSignInEmail","bind","onTextboxChangeSignInPassword","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","onSignIn","onSignUp","logout","componentDidMount","obj","fetch","then","res","json","success","setState","event","target","value","method","headers","body","JSON","stringify","email","password","console","log","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'whatwg-fetch';\n\nimport {\n  getFromStorage,\n  setInStorage,\n} from '../../utils/storage';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      token: '',\n      signUpError: '',\n      signInError: '',\n      signInEmail: '',\n      signInPassword: '',\n      signUpEmail: '',\n      signUpPassword: '',\n    };\n\n    this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(this);\n    this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(this);\n    this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n    this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n    \n    this.onSignIn = this.onSignIn.bind(this);\n    this.onSignUp = this.onSignUp.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage('the_main_app');\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify token\n      fetch('/api/account/verify?token=' + token)\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            this.setState({\n              token,\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              isLoading: false,\n            });\n          }\n        });\n    } else {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  onTextboxChangeSignInEmail(event) {\n    this.setState({\n      signInEmail: event.target.value,\n    });\n  }\n\n  onTextboxChangeSignInPassword(event) {\n    this.setState({\n      signInPassword: event.target.value,\n    });\n  }\n\n  onTextboxChangeSignUpEmail(event) {\n    this.setState({\n      signUpEmail: event.target.value,\n    });\n  }\n\n  onTextboxChangeSignUpPassword(event) {\n    this.setState({\n      signUpPassword: event.target.value,\n    });\n  }\n\n  onSignUp() {\n    // Grab state\n    const {\n      signUpEmail,\n      signUpPassword,\n    } = this.state;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    // Post request to backend\n    fetch('/api/account/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: signUpEmail,\n        password: signUpPassword,\n      }),\n    }).then(res => res.json())\n      .then(json => {\n        console.log('json', json);\n        if (json.success) {\n          this.setState({\n            signUpError: json.message,\n            isLoading: false,\n            signUpEmail: '',\n            signUpPassword: '',\n          });\n        } else {\n          this.setState({\n            signUpError: json.message,\n            isLoading: false,\n          });\n        }\n      });\n  }\n\n  onSignIn() {\n    // Grab state\n    const {\n      signInEmail,\n      signInPassword,\n    } = this.state;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    // Post request to backend\n    fetch('/api/account/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword,\n      }),\n    }).then(res => res.json())\n      .then(json => {\n        console.log('json', json);\n        if (json.success) {\n          setInStorage('the_main_app', { token: json.token });\n          this.setState({\n            signInError: json.message,\n            isLoading: false,\n            signInPassword: '',\n            signInEmail: '',\n            token: json.token,\n          });\n        } else {\n          this.setState({\n            signInError: json.message,\n            isLoading: false,\n          });\n        }\n      });\n  }\n\n  logout() {\n    this.setState({\n      isLoading: true,\n    });\n    const obj = getFromStorage('the_main_app');\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify token\n      fetch('/api/account/logout?token=' + token)\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            this.setState({\n              token: '',\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              isLoading: false,\n            });\n          }\n        });\n    } else {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      token,\n      signInError,\n      signInEmail,\n      signInPassword,\n      signUpEmail,\n      signUpPassword,\n      signUpError,\n    } = this.state;\n\n    if (isLoading) {\n      return (<div><p>Loading...</p></div>);\n    }\n\n    if (!token) {\n      return (\n        <div>\n          <div>\n            {\n              (signInError) ? (\n                <p>{signInError}</p>\n              ) : (null)\n            }\n            <p>Sign In</p>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={signInEmail}\n              onChange={this.onTextboxChangeSignInEmail}\n            />\n            <br />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={signInPassword}\n              onChange={this.onTextboxChangeSignInPassword}\n            />\n            <br />\n            <button onClick={this.onSignIn}>Sign In</button>\n          </div>\n          <br />\n          <br />\n          <div>\n            {\n              (signUpError) ? (\n                <p>{signUpError}</p>\n              ) : (null)\n            }\n            <p>Sign Up</p>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={signUpEmail}\n              onChange={this.onTextboxChangeSignUpEmail}\n            /><br />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={signUpPassword}\n              onChange={this.onTextboxChangeSignUpPassword}\n            /><br />\n            <button onClick={this.onSignUp}>Sign Up</button>\n          </div>\n\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <p>Account</p>\n        <button onClick={this.logout}>Logout</button>\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}