{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Coding\\\\New folder\\\\feedback-system-master\\\\src\\\\component\\\\Review\\\\slider.js\";\nimport React from \"react\";\nimport Slider, { Tooltip } from 'rc-slider';\nimport 'feed.css'; // const SliderPage = createSliderWithTooltip(Slider);\n\nconst SliderPage = () => {\n  return React.createElement(\"div\", {\n    className: \"my-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    prefixCls: \"rc-slider-tooltip\",\n    overlay: this.props.value,\n    visible: true,\n    placement: \"top\",\n    key: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Handle, {\n    value: this.props.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(Slider, {\n    min: this.props.minValue,\n    max: this.props.maxValue,\n    marks: marks,\n    disabled: this.props.disabled,\n    step: this.props.step,\n    onChange: this.updateMixValue.bind(this),\n    value: this.props.value,\n    onAfterChange: value => this.props.MixValue(getValues(value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-thumbs-o-down fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"range\",\n    className: \"slider\",\n    id: \"customRange1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-thumbs-o-up fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default SliderPage;","map":{"version":3,"sources":["E:\\Project\\Coding\\New folder\\feedback-system-master\\src\\component\\Review\\slider.js"],"names":["React","Slider","Tooltip","SliderPage","props","value","minValue","maxValue","marks","disabled","step","updateMixValue","bind","MixValue","getValues"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,OAAjB,QAAgC,WAAhC;AACA,OAAO,UAAP,C,CACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,OAAD;AACH,IAAA,SAAS,EAAC,mBADP;AAEH,IAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,KAFjB;AAGH,IAAA,OAAO,EAAE,IAHN;AAIH,IAAA,SAAS,EAAC,KAJP;AAKH,IAAA,GAAG,EAAE,CALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPG,CADH,EAUE,oBAAC,MAAD;AAAW,IAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,QAA3B;AACA,IAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,QADhB;AAEA,IAAA,KAAK,EAAEC,KAFP;AAGA,IAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAHrB;AAIA,IAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAJjB;AAKA,IAAA,QAAQ,EAAE,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CALV;AAMA,IAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KANlB;AAOM,IAAA,aAAa,EAAEA,KAAK,IAAI,KAAKD,KAAL,CAAWS,QAAX,CAAoBC,SAAS,CAACT,KAAD,CAA7B,CAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAkBI;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EAmBI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAC,QAA9B;AAAuC,IAAA,EAAE,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EAoBI;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ;AAwBD,CAzBD;;AA2BA,eAAeF,UAAf","sourcesContent":["import React from \"react\";\nimport Slider, { Tooltip } from 'rc-slider';\nimport 'feed.css';\n// const SliderPage = createSliderWithTooltip(Slider);\n\nconst SliderPage = () => {\n  return (\n      <div className=\"my-5\">\n         <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={this.props.value}\n      visible={true}\n      placement=\"top\"\n      key={0}\n    >\n      <Handle value={this.props.value}  />\n    </Tooltip>\n        <Slider    min={this.props.minValue}\n        max={this.props.maxValue}\n        marks={marks}\n        disabled={this.props.disabled}\n        step={this.props.step}\n        onChange={this.updateMixValue.bind(this)}\n        value={this.props.value}\n              onAfterChange={value => this.props.MixValue(getValues(value))}/>\n          <i className=\"fa fa-thumbs-o-down fa-lg\"/>\n          <input type=\"range\" className=\"slider\" id=\"customRange1\" />\n          <i className=\"fa fa-thumbs-o-up fa-lg\"/>\n    </div>\n  );\n}\n\nexport default SliderPage;"]},"metadata":{},"sourceType":"module"}