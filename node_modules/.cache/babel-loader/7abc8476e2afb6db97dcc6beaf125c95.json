{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Coding\\\\New folder\\\\feedback-system-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './component/layout/NavBar';\nimport Users from './component/users/Users';\nimport Search from './component/users/search';\nimport Alert from './component/layout/alert';\nimport SideBar from './component/layout/sidenav';\nimport Feed from './component/Review/feed';\nimport Feed2 from './component/Review/feed2';\nimport Feed3 from './component/Review/feed3';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 3000);\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(\"https://api.github.com/users?client_id=\".concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    this.setState({\n      users: res.data,\n      loading: false\n    });\n    console.log(this.state.users);\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Search, {\n      searchUsers: this.searchUsers,\n      clearUsers: this.clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: this.setAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Feed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Feed2, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Feed3, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\Project\\Coding\\New folder\\feedback-system-master\\src\\App.js"],"names":["React","Component","Navbar","Users","Search","Alert","SideBar","Feed","Feed2","Feed3","axios","App","state","users","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","clearUsers","setAlert","msg","type","setTimeout","componentDidMount","console","log","render","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navbar from './component/layout/NavBar';\nimport Users from './component/users/Users';\nimport Search from './component/users/search';\nimport Alert from './component/layout/alert';\nimport SideBar from './component/layout/sidenav';\nimport Feed from './component/Review/feed';\nimport Feed2 from './component/Review/feed2';\nimport Feed3 from './component/Review/feed3';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\nstate={\n  users: [],\n  loading: false,\n  alert: null\n};\n\n\n  async componentDidMount(){\n    this.setState({loading:true});\n    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    this.setState({users: res.data, loading:false });\n    console.log(this.state.users);\n  }\n\n  searchUsers =  async text => {\n    this.setState({ loading: true });\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    this.setState({users: res.data.items, loading: false });\n  }\n\n  clearUsers = () => this.setState({ users: [], loading: false});\n  setAlert = (msg,type) => {\n     this.setState({alert:{ msg,type }});\n    \n  \n  setTimeout ( ()=> this.setState({ alert:null }), 3000)\n  };\n\n  render(){ \n    const {users, loading } = this.state;\n    return (      \n    <div className=\"App\">\n       \n\n     \n      {/* <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} /> */}\n      <Navbar/>\n        <div className='container'>\n          <Alert alert={this.state.alert} />\n            <Search searchUsers={this.searchUsers} clearUsers ={this.clearUsers} showClear={users.length > 0 ? true : false} setAlert={this.setAlert}/>\n                <Feed />\n                <Feed2 />\n                <Feed3 />\n                \n            {/* <Users loading={loading} users={users} /> */}\n        </div>\n      \n    </div>\n  );  \n}\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}