{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Coding\\\\New folder\\\\feedback-system-master\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './component/layout/NavBar';\nimport Users from './component/users/Users'; // import Search from './component/users/search';\n// import Alert from './component/layout/alert';\n\nimport Feed from './component/Review/feed';\nimport Feed2 from './component/Review/feed2';\nimport Feed3 from './component/Review/feed3';\nimport Login from '../Login/login';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 3000);\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(\"https://api.github.com/users?client_id=\".concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    this.setState({\n      users: res.data,\n      loading: false\n    });\n    console.log(this.state.users);\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Feed\",\n      component: Feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Feed2\",\n      component: Feed2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Feed3\",\n      component: Feed3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\Project\\Coding\\New folder\\feedback-system-master\\src\\App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","Navbar","Users","Feed","Feed2","Feed3","Login","axios","App","state","users","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","clearUsers","setAlert","msg","type","setTimeout","componentDidMount","console","log","render","props"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './component/layout/NavBar';\nimport Users from './component/users/Users';\n// import Search from './component/users/search';\n// import Alert from './component/layout/alert';\nimport Feed from './component/Review/feed';\nimport Feed2 from './component/Review/feed2';\nimport Feed3 from './component/Review/feed3';\nimport Login from '../Login/login';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\nstate={\n  users: [],\n  loading: false,\n  alert: null\n};\n\n\n  async componentDidMount(){\n    this.setState({loading:true});\n    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    this.setState({users: res.data, loading:false });\n    console.log(this.state.users);\n  }\n\n  searchUsers =  async text => {\n    this.setState({ loading: true });\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    this.setState({users: res.data.items, loading: false });\n  }\n\n  clearUsers = () => this.setState({ users: [], loading: false});\n  setAlert = (msg,type) => {\n     this.setState({alert:{ msg,type }});\n    \n  \n  setTimeout ( ()=> this.setState({ alert:null }), 3000)\n  };\n\n  render(){ \n    const {users, loading } = this.state;\n    return (   \n      \n    <Router>\n    <div className=\"App\">\n       \n      <Navbar/>\n        <div className='container'>\n          {/* <Alert alert={this.state.alert} /> */}\n          <Switch> \n            <Route exact path='/' render={props => (\n              <Fragment>\n                 {/* <Search searchUsers={this.searchUsers} clearUsers ={this.clearUsers} showClear={users.length > 0 ? true : false} setAlert={this.setAlert}/> */}\n                \n            <Users loading={loading} users={users} />\n              </Fragment>\n            )} />\n            <Route exact path='/Feed' component ={Feed}/>\n            <Route exact path='/Feed2' component={Feed2}/>\n            <Route exact path='/Feed3' component={Feed3}/>\n            <Route exact path='/Login' component={Login}/>\n            \n          </Switch>\n          </div>\n     </div>\n    </Router>\n  );  \n}\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}