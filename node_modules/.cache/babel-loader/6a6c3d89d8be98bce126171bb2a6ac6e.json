{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SyntheticEvent\n */\n\n/* eslint valid-typeof: 0 */\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\nvar EVENT_POOL_SIZE = 10;\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nif (__DEV__) {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\n\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n  var Interface = this.constructor.Interface;\n\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n\n    var normalize = Interface[propName];\n\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n  stopPropagation: function stopPropagation() {\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function persist() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function destructor() {\n    var Interface = this.constructor.Interface;\n\n    for (var propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n\n    if (__DEV__) {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\n\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function E() {};\n\n  E.prototype = Super.prototype;\n  var prototype = new E();\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n  addEventPoolingTo(Class);\n};\n/** Proxying after everything set on SyntheticEvent\n  * to resolve Proxy issue on some WebKit browsers\n  * in which some Event properties are set to undefined (GH#10010)\n  */\n\n\nif (__DEV__) {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function construct(target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function apply(constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function set(target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              warning(didWarnForAddedNewProperty || target.isPersistent(), \"This synthetic event is reused for performance reasons. If you're \" + \"seeing this, you're adding a new property in the synthetic event object. \" + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');\n              didWarnForAddedNewProperty = true;\n            }\n\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n\naddEventPoolingTo(SyntheticEvent);\nmodule.exports = SyntheticEvent;\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {String} propName\n  * @param {?object} getVal\n  * @return {object} defineProperty object\n  */\n\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    warning(warningCondition, \"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  var EventConstructor = this;\n\n  if (EventConstructor.eventPool.length) {\n    var instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n    return instance;\n  }\n\n  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n}\n\nfunction releasePooledEvent(event) {\n  var EventConstructor = this;\n  invariant(event instanceof EventConstructor, 'Trying to release an event instance  into a pool of a different type.');\n  event.destructor();\n\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}","map":{"version":3,"sources":["/Users/banshi/react-app/node_modules/react-tap-event-plugin/src/SyntheticEvent.js"],"names":["emptyFunction","require","invariant","didWarnForAddedNewProperty","isProxySupported","Proxy","EVENT_POOL_SIZE","__DEV__","process","env","NODE_ENV","warning","shouldBeReleasedProperties","EventInterface","type","target","currentTarget","thatReturnsNull","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","defaultPrevented","isTrusted","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","_targetInst","Interface","constructor","propName","hasOwnProperty","normalize","returnValue","isDefaultPrevented","thatReturnsTrue","thatReturnsFalse","isPropagationStopped","Object","assign","prototype","cancelBubble","persist","isPersistent","destructor","defineProperty","getPooledWarningPropertyDefinition","i","length","augmentClass","Class","Super","E","addEventPoolingTo","construct","args","apply","create","that","set","prop","value","indexOf","module","exports","getVal","isFunction","configurable","get","val","action","warn","result","warningCondition","getPooledEvent","nativeInst","EventConstructor","eventPool","instance","pop","call","releasePooledEvent","push","getPooled","release"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SyntheticEvent\n */\n\n/* eslint valid-typeof: 0 */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\nvar EVENT_POOL_SIZE = 10;\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nif (__DEV__) {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar shouldBeReleasedProperties = [\n  'dispatchConfig',\n  '_targetInst',\n  'nativeEvent',\n  'isDefaultPrevented',\n  'isPropagationStopped',\n  '_dispatchListeners',\n  '_dispatchInstances'\n];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null\n    ? nativeEvent.defaultPrevented\n    : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName])\n        );\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (__DEV__) {\n      Object.defineProperty(\n        this,\n        'nativeEvent',\n        getPooledWarningPropertyDefinition('nativeEvent', null)\n      );\n      Object.defineProperty(\n        this,\n        'preventDefault',\n        getPooledWarningPropertyDefinition('preventDefault', emptyFunction)\n      );\n      Object.defineProperty(\n        this,\n        'stopPropagation',\n        getPooledWarningPropertyDefinition('stopPropagation', emptyFunction)\n      );\n    }\n  }\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var E = function() {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n  addEventPoolingTo(Class);\n};\n\n/** Proxying after everything set on SyntheticEvent\n  * to resolve Proxy issue on some WebKit browsers\n  * in which some Event properties are set to undefined (GH#10010)\n  */\nif (__DEV__) {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function(target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function(constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function(target, prop, value) {\n            if (\n              prop !== 'isPersistent' &&\n              !target.constructor.Interface.hasOwnProperty(prop) &&\n              shouldBeReleasedProperties.indexOf(prop) === -1\n            ) {\n              warning(\n                didWarnForAddedNewProperty || target.isPersistent(),\n                \"This synthetic event is reused for performance reasons. If you're \" +\n                  \"seeing this, you're adding a new property in the synthetic event object. \" +\n                  'The property is never released. See ' +\n                  'https://fb.me/react-event-pooling for more information.'\n              );\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n\naddEventPoolingTo(SyntheticEvent);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {String} propName\n  * @param {?object} getVal\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction\n      ? 'This is a no-op function'\n      : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    warning(\n      warningCondition,\n      \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n        \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n        'If you must keep the original synthetic event around, use event.persist(). ' +\n        'See https://fb.me/react-event-pooling for more information.',\n      action,\n      propName,\n      result\n    );\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  var EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    var instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst\n    );\n    return instance;\n  }\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst\n  );\n}\n\nfunction releasePooledEvent(event) {\n  var EventConstructor = this;\n  invariant(\n    event instanceof EventConstructor,\n    'Trying to release an event instance  into a pool of a different type.'\n  );\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}\n"]},"metadata":{},"sourceType":"script"}