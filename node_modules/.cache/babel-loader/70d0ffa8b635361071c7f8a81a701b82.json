{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Coding\\\\New folder\\\\feedback-system-master\\\\src\\\\component\\\\Login\\\\demo.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; // import axios from 'axios';\n// import Navbar from './component/layout/NavBar';\n// import Dashbord from './component/layout/Dashbord';\n// import Login from './component/layout/login';\n// import Users from './component/users/Users';\n// import Feed from './component/Review/feed';\n// import Feed2 from './component/Review/feed2';\n// import Feed3 from './component/Review/feed3';\n\nimport Login from './component/Login/Login';\nimport Admin from './component/Login/Admin';\nimport Logout from './component/Login/Logout';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      loading: false,\n      alert: null\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(\"https://api.github.com/users?client_id=\".concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    this.setState({\n      users: res.data,\n      loading: false\n    });\n    console.log(this.state.users);\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Feed\",\n      component: Feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Feed2\",\n      component: Feed2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Feed3\",\n      component: Feed3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Dashbord\",\n      component: Dashbord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\Project\\Coding\\New folder\\feedback-system-master\\src\\component\\Login\\demo.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Login","Admin","Logout","App","state","users","loading","alert","componentDidMount","setState","res","axios","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","console","log","render","props","Feed","Feed2","Feed3","Dashbord"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC5BS,KAD4B,GACtB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADsB;AAAA;;AAO1B,QAAMC,iBAAN,GAAyB;AACvB,SAAKC,QAAL,CAAc;AAACH,MAAAA,OAAO,EAAC;AAAT,KAAd;AACA,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,kDAAoDC,OAAO,CAACC,GAAR,CAAYC,0BAAhE,4BAA4GF,OAAO,CAACC,GAAR,CAAYE,8BAAxH,EAAlB;AACA,SAAKP,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAEK,GAAG,CAACO,IAAZ;AAAkBX,MAAAA,OAAO,EAAC;AAA1B,KAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,KAAvB;AACD;;AAEDe,EAAAA,MAAM,GAAE;AAAA,wBACoB,KAAKhB,KADzB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAEN,WAEJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAEe,KAAK,IAC9B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEf,OAAhB;AAAyB,QAAA,KAAK,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,EAMM,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAGiB,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN,EAOM,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPN,EAQM,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARN,EASM,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATN,CADF,CAJJ,CADJ,CAFI;AAuBD;;AAvCyB;;AAwC5B,eAAetB,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import Navbar from './component/layout/NavBar';\r\n// import Dashbord from './component/layout/Dashbord';\r\n// import Login from './component/layout/login';\r\n// import Users from './component/users/Users';\r\n// import Feed from './component/Review/feed';\r\n// import Feed2 from './component/Review/feed2';\r\n// import Feed3 from './component/Review/feed3';\r\nimport Login from './component/Login/Login';\r\nimport Admin from './component/Login/Admin';\r\nimport Logout from './component/Login/Logout';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\nstate={\r\n  users: [],\r\n  loading: false,\r\n  alert: null\r\n};\r\n\r\n  async componentDidMount(){\r\n    this.setState({loading:true});\r\n    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n    this.setState({users: res.data, loading:false });\r\n    console.log(this.state.users);\r\n  }\r\n\r\n  render(){ \r\n    const {users, loading } = this.state;\r\n    return (   \r\n  \r\n<Router>\r\n    <div className=\"App\">\r\n    {/* <Login /> */}\r\n     <Navbar/>\r\n      {/* <Login /> */}\r\n        <div className='container'>\r\n          <Switch> \r\n               <Route exact path='/' render={props => (\r\n                    <Fragment>\r\n                      <Users loading={loading} users={users} />\r\n                    </Fragment>)} \r\n                />\r\n                <Route exact path='/Feed' component ={Feed}/>\r\n                <Route exact path='/Feed2' component={Feed2}/>\r\n                <Route exact path='/Feed3' component={Feed3}/>\r\n                <Route exact path='/Dashbord' component={Dashbord}/>           \r\n          </Switch>\r\n          </div>\r\n     </div>\r\n</Router>\r\n\r\n);}}\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}