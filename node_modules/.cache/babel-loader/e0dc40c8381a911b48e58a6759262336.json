{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule TapEventPlugin\n * @flow\n */\n'use strict';\n\nvar EventPropagators = require('react-dom').__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.EventPropagators;\n\nvar TouchEventUtils = require('fbjs/lib/TouchEventUtils');\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n/**\n * Number of pixels that are tolerated in between a `touchStart` and `touchEnd`\n * in order to still be considered a 'tap' event.\n */\n\n\nvar tapMoveThreshold = 10;\nvar startCoords = {\n  x: 0,\n  y: 0\n};\nvar Axis = {\n  x: {\n    page: 'pageX',\n    client: 'clientX',\n    envScroll: 'currentPageScrollLeft'\n  },\n  y: {\n    page: 'pageY',\n    client: 'clientY',\n    envScroll: 'currentPageScrollTop'\n  }\n};\n\nfunction getAxisCoordOfEvent(axis, nativeEvent) {\n  var singleTouch = TouchEventUtils.extractSingleTouch(nativeEvent);\n\n  if (singleTouch) {\n    return singleTouch[axis.page];\n  }\n\n  return nativeEvent[axis.page];\n}\n\nfunction getDistance(coords, nativeEvent) {\n  var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);\n  var pageY = getAxisCoordOfEvent(Axis.y, nativeEvent);\n  return Math.pow(Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2), 0.5);\n}\n\nvar touchEvents = ['topTouchStart', 'topTouchCancel', 'topTouchEnd', 'topTouchMove'];\nvar dependencies = ['topMouseDown', 'topMouseMove', 'topMouseUp'].concat(touchEvents);\nvar eventTypes = {\n  touchTap: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchTap',\n      captured: 'onTouchTapCapture'\n    },\n    dependencies: dependencies\n  }\n};\nvar usedTouchTime = 0; // var TapEventPlugin = {\n\nfunction createTapEventPlugin(shouldRejectClick) {\n  return {\n    tapMoveThreshold: tapMoveThreshold,\n    eventTypes: eventTypes,\n    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      if (!isStartish(topLevelType) && !isEndish(topLevelType)) {\n        return null;\n      } // on ios, there is a delay after touch event and synthetic\n      // mouse events, so that user can perform double tap\n      // solution: ignore mouse events following touchevent within small timeframe\n\n\n      if (touchEvents.indexOf(topLevelType) !== -1) {\n        usedTouchTime = Date.now();\n      } else {\n        if (shouldRejectClick(usedTouchTime, Date.now())) {\n          return null;\n        }\n      }\n\n      var event = null;\n      var distance = getDistance(startCoords, nativeEvent);\n\n      if (isEndish(topLevelType) && distance < tapMoveThreshold) {\n        event = SyntheticEvent.getPooled(eventTypes.touchTap, targetInst, nativeEvent, nativeEventTarget);\n      }\n\n      if (isStartish(topLevelType)) {\n        startCoords.x = getAxisCoordOfEvent(Axis.x, nativeEvent);\n        startCoords.y = getAxisCoordOfEvent(Axis.y, nativeEvent);\n      } else if (isEndish(topLevelType)) {\n        startCoords.x = 0;\n        startCoords.y = 0;\n      }\n\n      EventPropagators.accumulateTwoPhaseDispatches(event);\n      return event;\n    }\n  };\n}\n\nmodule.exports = createTapEventPlugin;","map":{"version":3,"sources":["/Users/banshi/react-app/node_modules/react-tap-event-plugin/src/TapEventPlugin.js"],"names":["EventPropagators","require","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","TouchEventUtils","SyntheticEvent","isEndish","topLevelType","isStartish","tapMoveThreshold","startCoords","x","y","Axis","page","client","envScroll","getAxisCoordOfEvent","axis","nativeEvent","singleTouch","extractSingleTouch","getDistance","coords","pageX","pageY","Math","pow","touchEvents","dependencies","concat","eventTypes","touchTap","phasedRegistrationNames","bubbled","captured","usedTouchTime","createTapEventPlugin","shouldRejectClick","extractEvents","targetInst","nativeEventTarget","indexOf","Date","now","event","distance","getPooled","accumulateTwoPhaseDispatches","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule TapEventPlugin\n * @flow\n */\n\n'use strict';\n\nvar EventPropagators = require('react-dom').__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.EventPropagators;\nvar TouchEventUtils = require('fbjs/lib/TouchEventUtils');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nfunction isEndish(topLevelType) {\n  return (\n    topLevelType === 'topMouseUp' ||\n    topLevelType === 'topTouchEnd' ||\n    topLevelType === 'topTouchCancel'\n  );\n}\n\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\n/**\n * Number of pixels that are tolerated in between a `touchStart` and `touchEnd`\n * in order to still be considered a 'tap' event.\n */\nvar tapMoveThreshold = 10;\nvar startCoords = {x: 0, y: 0};\n\nvar Axis = {\n  x: {page: 'pageX', client: 'clientX', envScroll: 'currentPageScrollLeft'},\n  y: {page: 'pageY', client: 'clientY', envScroll: 'currentPageScrollTop'}\n};\n\nfunction getAxisCoordOfEvent(\n  axis,\n  nativeEvent\n) {\n  var singleTouch = TouchEventUtils.extractSingleTouch(nativeEvent);\n  if (singleTouch) {\n    return singleTouch[axis.page];\n  }\n  return nativeEvent[axis.page];\n}\n\nfunction getDistance(coords, nativeEvent) {\n  var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);\n  var pageY = getAxisCoordOfEvent(Axis.y, nativeEvent);\n  return Math.pow(\n    Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2),\n    0.5\n  );\n}\n\nvar touchEvents = [\n  'topTouchStart',\n  'topTouchCancel',\n  'topTouchEnd',\n  'topTouchMove'\n];\n\nvar dependencies = ['topMouseDown', 'topMouseMove', 'topMouseUp'].concat(\n  touchEvents\n);\n\nvar eventTypes = {\n  touchTap: {\n    phasedRegistrationNames: {\n      bubbled: 'onTouchTap',\n      captured: 'onTouchTapCapture'\n    },\n    dependencies: dependencies\n  }\n};\n\nvar usedTouchTime = 0;\n\n// var TapEventPlugin = {\nfunction createTapEventPlugin(shouldRejectClick) {\n  return {\n    tapMoveThreshold: tapMoveThreshold,\n\n    eventTypes: eventTypes,\n\n    extractEvents: function(\n      topLevelType,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget\n    ) {\n      if (!isStartish(topLevelType) && !isEndish(topLevelType)) {\n        return null;\n      }\n      // on ios, there is a delay after touch event and synthetic\n      // mouse events, so that user can perform double tap\n      // solution: ignore mouse events following touchevent within small timeframe\n      if (touchEvents.indexOf(topLevelType) !== -1) {\n        usedTouchTime = Date.now();\n      } else {\n        if (shouldRejectClick(usedTouchTime, Date.now())) {\n          return null;\n        }\n      }\n      var event = null;\n      var distance = getDistance(startCoords, nativeEvent);\n      if (isEndish(topLevelType) && distance < tapMoveThreshold) {\n        event = SyntheticEvent.getPooled(\n          eventTypes.touchTap,\n          targetInst,\n          nativeEvent,\n          nativeEventTarget\n        );\n      }\n      if (isStartish(topLevelType)) {\n        startCoords.x = getAxisCoordOfEvent(Axis.x, nativeEvent);\n        startCoords.y = getAxisCoordOfEvent(Axis.y, nativeEvent);\n      } else if (isEndish(topLevelType)) {\n        startCoords.x = 0;\n        startCoords.y = 0;\n      }\n      EventPropagators.accumulateTwoPhaseDispatches(event);\n      return event;\n    }\n  };\n}\n\nmodule.exports = createTapEventPlugin;\n"]},"metadata":{},"sourceType":"script"}