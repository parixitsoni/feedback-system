{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Coding\\\\New folder\\\\feedback-system-master\\\\src\\\\component\\\\Review\\\\slider.js\";\nimport React from \"react\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'feed.css'; // const SliderPage = createSliderWithTooltip(Slider);\n\nReact.createElement(Tooltip, {\n  prefixCls: \"rc-slider-tooltip\",\n  overlay: this.props.value,\n  visible: true,\n  placement: \"top\",\n  key: 0,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(Handle, {\n  value: this.props.value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\n\nconst SliderPage = () => {\n  return React.createElement(\"div\", {\n    className: \"my-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    min: this.props.minValue,\n    max: this.props.maxValue,\n    marks: marks,\n    disabled: this.props.disabled,\n    step: this.props.step,\n    onChange: this.updateMixValue.bind(this),\n    value: this.props.value,\n    onAfterChange: value => this.props.MixValue(getValues(value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-thumbs-o-down fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"range\",\n    className: \"slider\",\n    id: \"customRange1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-thumbs-o-up fa-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default SliderPage;","map":{"version":3,"sources":["E:\\Project\\Coding\\New folder\\feedback-system-master\\src\\component\\Review\\slider.js"],"names":["React","Slider","createSliderWithTooltip","props","value","SliderPage","minValue","maxValue","marks","disabled","step","updateMixValue","bind","MixValue","getValues"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,uBAAjB,QAAgD,WAAhD;AACA,OAAO,UAAP,C,CACA;;AAEA,oBAAC,OAAD;AACC,EAAA,SAAS,EAAC,mBADX;AAEC,EAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,KAFrB;AAGC,EAAA,OAAO,EAAE,IAHV;AAIC,EAAA,SAAS,EAAC,KAJX;AAKC,EAAA,GAAG,EAAE,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOC,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPD;;AASA,MAAMC,UAAU,GAAG,MAAM;AACvB,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAW,IAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,QAA3B;AACA,IAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,QADhB;AAEA,IAAA,KAAK,EAAEC,KAFP;AAGA,IAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QAHrB;AAIA,IAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,IAJjB;AAKA,IAAA,QAAQ,EAAE,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CALV;AAMA,IAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KANlB;AAOM,IAAA,aAAa,EAAEA,KAAK,IAAI,KAAKD,KAAL,CAAWU,QAAX,CAAoBC,SAAS,CAACV,KAAD,CAA7B,CAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASI;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAC,QAA9B;AAAuC,IAAA,EAAE,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAeD,CAhBD;;AAkBA,eAAeC,UAAf","sourcesContent":["import React from \"react\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'feed.css';\n// const SliderPage = createSliderWithTooltip(Slider);\n\n<Tooltip\n prefixCls=\"rc-slider-tooltip\"\n overlay={this.props.value}\n visible={true}\n placement=\"top\"\n key={0}\n>\n <Handle value={this.props.value}  />\n</Tooltip>\nconst SliderPage = () => {\n  return (\n      <div className=\"my-5\">\n        <Slider    min={this.props.minValue}\n        max={this.props.maxValue}\n        marks={marks}\n        disabled={this.props.disabled}\n        step={this.props.step}\n        onChange={this.updateMixValue.bind(this)}\n        value={this.props.value}\n              onAfterChange={value => this.props.MixValue(getValues(value))}/>\n          <i className=\"fa fa-thumbs-o-down fa-lg\"/>\n          <input type=\"range\" className=\"slider\" id=\"customRange1\" />\n          <i className=\"fa fa-thumbs-o-up fa-lg\"/>\n    </div>\n  );\n}\n\nexport default SliderPage;"]},"metadata":{},"sourceType":"module"}