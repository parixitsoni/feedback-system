{"ast":null,"code":"var _jsxFileName = \"/home/parixit/Desktop/GitHub/feedback-system/src/component/users/search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: ''\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text === '') {\n      this.props.setAlert('Please enter something', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({\n        text: ''\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          showClear = _this$props.showClear,\n          clearUsers = _this$props.clearUsers;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit.bind(this),\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"serach users.....\",\n      value: this.state.text,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"btn btn-dark btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), showClear && React.createElement(\"button\", {\n      className: \"btn btn-ligth btn-block\",\n      onClick: clearUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Clear\"));\n  }\n\n}\nsearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired\n};\nexport default search;","map":{"version":3,"sources":["/home/parixit/Desktop/GitHub/feedback-system/src/component/users/search.js"],"names":["React","Component","PropTypes","search","state","text","onChange","e","setState","target","name","value","onSubmit","preventDefault","props","setAlert","searchUsers","render","showClear","clearUsers","bind","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC3B;AACHC,MAAAA,IAAI,EAAE;AADH,KAD2B;;AAAA,SAqBlCC,QArBkC,GAqBtBC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAC,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,KAAd,CArBgB;AAAA;;AAWlCC,EAAAA,QAAQ,CAACL,CAAD,EAAI;AACRA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAG,KAAKT,KAAL,CAAWC,IAAX,KAAoB,EAAvB,EAA0B;AACtB,WAAKS,KAAL,CAAWC,QAAX,CAAoB,wBAApB,EAA6C,OAA7C;AACH,KAFD,MAEK;AACD,WAAKD,KAAL,CAAWE,WAAX,CAAuB,KAAKZ,KAAL,CAAWC,IAAlC;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAC;AAAN,OAAd;AACH;AAEJ;;AAGDY,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKH,KADlC;AAAA,UACGI,SADH,eACGA,SADH;AAAA,UACcC,UADd,eACcA,UADd;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKP,QAAL,CAAcQ,IAAd,CAAmB,IAAnB,CAAhB;AAA0C,MAAA,SAAS,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,mBAA3C;AAA+D,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,IAAjF;AAAuF,MAAA,QAAQ,EAAE,KAAKC,QAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,SAAS,EAAC,wBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAMKY,SAAS,IAAK;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANnB,CADJ;AAWH;;AApCiC;AAAzBhB,M,CAKFkB,S,GAAa;AAChBL,EAAAA,WAAW,EAAEd,SAAS,CAACoB,IAAV,CAAeC,UADZ;AAEhBJ,EAAAA,UAAU,EAAEjB,SAAS,CAACoB,IAAV,CAAeC,UAFX;AAGhBL,EAAAA,SAAS,EAAEhB,SAAS,CAACsB,IAAV,CAAeD;AAHV,C;AAkCxB,eAAepB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class search extends Component {\n    state ={\n        text: ''\n    };\n\n    static propTypes  = {\n        searchUsers: PropTypes.func.isRequired,\n        clearUsers: PropTypes.func.isRequired,\n        showClear: PropTypes.bool.isRequired \n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n        if(this.state.text === ''){\n            this.props.setAlert('Please enter something','light');\n        }else{\n            this.props.searchUsers(this.state.text);\n            this.setState({text:''});\n        }\n\n    }\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n    render() {\n        const { showClear, clearUsers } = this.props;\n        return (\n            <div>\n                <form onSubmit={this.onSubmit.bind(this)} className=\"form\"> \n                    <input type=\"text\" name=\"text\" placeholder=\"serach users.....\" value={this.state.text} onChange={this.onChange}/>\n                    <input type=\"submit\" value=\"Search\" className=\"btn btn-dark btn-block\" />\n                </form>\n\n                {showClear && (<button className=\"btn btn-ligth btn-block\" onClick={clearUsers}>Clear</button> )}\n                 \n            </div>\n        )\n    }\n}\n\nexport default search\n"]},"metadata":{},"sourceType":"module"}