{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Coding\\\\New folder\\\\feedback-system-master\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({\n      error: ''\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    if (!this.state.username) {\n      return this.setState({\n        error: 'Username is required'\n      });\n    }\n\n    if (!this.state.password) {\n      return this.setState({\n        error: 'Password is required'\n      });\n    }\n\n    return this.setState({\n      error: ''\n    });\n  }\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.error && React.createElement(\"h3\", {\n      \"data-test\": \"error\",\n      onClick: this.dismissError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.dismissError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\u2716\"), this.state.error), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"User Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-test\": \"username\",\n      value: this.state.username,\n      onChange: this.handleUserChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      \"data-test\": \"password\",\n      value: this.state.password,\n      onChange: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Next\")))), React.createElement(Route, {\n      exact: true,\n      path: \"/Swip\",\n      component: Swip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\Project\\Coding\\New folder\\feedback-system-master\\src\\App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","App","constructor","state","username","password","error","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","setState","evt","preventDefault","target","value","render","Swip"],"mappings":"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","sourcesContent":["\nimport React, {Component, Fragment} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      error: '',\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: '' });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    if (!this.state.username) {\n      return this.setState({ error: 'Username is required' });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: 'Password is required' });\n    }\n\n    return this.setState({ error: '' });\n  }\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value,\n    });\n  };\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value,\n    });\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n\n    return (\n    <Router>\n     <Switch>\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          {\n            this.state.error &&\n            <h3 data-test=\"error\" onClick={this.dismissError}>\n              <button onClick={this.dismissError}>âœ–</button>\n              {this.state.error}\n            </h3>\n          }\n          <label>User Name</label>\n          <input type=\"text\" data-test=\"username\" value={this.state.username} onChange={this.handleUserChange} />\n\n          <label>Password</label>\n          <input type=\"password\" data-test=\"password\" value={this.state.password} onChange={this.handlePassChange} />\n\n          {/* <input type=\"submit\" value=\"Log In\" data-test=\"submit\" /> */}\n          <a href=\"/App\"><button type=\"button\" className='btn btn-success'>Next</button></a>\n        </form>\n      </div>\n      <Route exact path='/Swip' component={Swip}/>\n      </Switch>\n    </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}