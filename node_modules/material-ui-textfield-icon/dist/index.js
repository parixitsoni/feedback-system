'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TextField = require('material-ui/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _IconButton = require('material-ui/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var getStyles = function getStyles(props) {
  var iconStyle = {
    position: 'absolute',
    top: 0,
    zIndex: 2
  };

  iconStyle[props.iconPosition === 'before' ? 'left' : 'right'] = 0;

  if (props.floatingLabelText) {
    iconStyle.top = 23;
  }

  return {
    main: {
      display: 'inline-block',
      position: 'relative',
      width: props.fullWidth ? '100%' : '256px'
    },
    iconStyle: iconStyle,
    textFieldStyle: {
      textIndent: props.iconPosition === 'before' ? 40 : 0,
      width: 'inherit'
    }
  };
};

var TextFieldIcon = function (_React$Component) {
  _inherits(TextFieldIcon, _React$Component);

  function TextFieldIcon(props) {
    _classCallCheck(this, TextFieldIcon);

    var _this = _possibleConstructorReturn(this, (TextFieldIcon.__proto__ || Object.getPrototypeOf(TextFieldIcon)).call(this));

    _this.styles = getStyles(props);
    return _this;
  }

  _createClass(TextFieldIcon, [{
    key: 'componentWillUpdate',
    value: function componentWillUpdate(nextProps) {
      this.styles = getStyles(nextProps);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          icon = _props.icon,
          iconPosition = _props.iconPosition,
          iconProps = _props.iconProps,
          style = _props.style,
          iconStyle = _props.iconStyle,
          textFieldStyle = _props.textFieldStyle,
          textFieldProps = _objectWithoutProperties(_props, ['icon', 'iconPosition', 'iconProps', 'style', 'iconStyle', 'textFieldStyle']);

      return _react2.default.createElement(
        'div',
        { style: _extends({}, this.styles.main, style) },
        _react2.default.createElement(
          _IconButton2.default,
          _extends({
            style: _extends({}, this.styles.iconStyle, iconStyle)
          }, iconProps),
          icon
        ),
        _react2.default.createElement(_TextField2.default, _extends({
          fullWidth: true,
          name: 'material-ui-textfield-icon',
          style: _extends({}, this.styles.textFieldStyle, textFieldStyle)
        }, textFieldProps))
      );
    }
  }]);

  return TextFieldIcon;
}(_react2.default.Component);

TextFieldIcon.propTypes = {
  /**
   * The icon component you want to display
   * @type {Node}
   */
  icon: _propTypes2.default.node.isRequired,
  /**
   * Icon position you can choose after | before (after by default)
   * @type {String}
   */
  iconPosition: _propTypes2.default.string,
  /**
   * The object who represent the icon properties
   * @type {Object}
   */
  iconProps: _propTypes2.default.object,
  /**
   * The object who represent the icon styles
   * @type {Object}
   */
  iconStyle: _propTypes2.default.object
};
TextFieldIcon.defaultProps = {
  iconPosition: 'after'
};
exports.default = TextFieldIcon;